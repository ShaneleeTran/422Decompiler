00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 5/21/2017 8:48:26 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU $0D
00000000  =0000000A                  8  LF      EQU $0A       
00000000                             9  
00001000                            10      ORG    $1000
00001000                            11      
00001000                            12  START:                  ; first instruction of program
00001000                            13  
00001000                            14  * Put program code here
00001000  43F9 00001253             15          LEA     WELCOME_MSG,A1  ; welcome message
00001006  103C 000E                 16          MOVE.B  #14,D0
0000100A  4E4F                      17          TRAP    #15
0000100C  13FC 0000 000011B2        18          MOVE.B  #0,CUR_LINE
00001014                            19          
00001014                            20  USR_IN_STRT
00001014  43F9 0000127D             21          LEA     USR_STRT_MSG,A1  ; user start address message
0000101A  103C 000E                 22          MOVE.B  #14,D0
0000101E  4E4F                      23          TRAP    #15
00001020                            24          
00001020  43F9 000011B3             25          LEA     STRT_INPUT,A1
00001026                            26      
00001026  103C 0002                 27          MOVE.B  #2,D0           ;read user input as string
0000102A  4E4F                      28          TRAP    #15
0000102C                            29                
0000102C  4EB9 000010DA             30          JSR     CHECK_INPUT_LEN   ;checks the length of user input
00001032                            31          
00001032  B83C 0001                 32          CMP.B   #1,D4
00001036  6700 0010                 33          BEQ     PASS_LEN_TEST        
0000103A                            34          ;else      
0000103A  43F9 000012B1             35          LEA     BAD_INPUT_MSG,A1
00001040  103C 000E                 36          MOVE.B  #14,D0
00001044  4E4F                      37          TRAP    #15
00001046  60CC                      38          BRA     USR_IN_STRT
00001048                            39          
00001048                            40  PASS_LEN_TEST        
00001048  4EB9 000010F6             41          JSR     ASCII_TO_HEX
0000104E  2A43                      42          MOVEA.L D3,A5
00001050                            43          
00001050  4EB9 00001128             44          JSR     CHECK_INPUT_ODD
00001056  B83C 0001                 45          CMP.B   #1,D4
0000105A  6700 0004                 46          BEQ     PASS_ODD_TEST
0000105E                            47          ;else
0000105E  60B4                      48          BRA     USR_IN_STRT
00001060                            49          
00001060                            50  PASS_ODD_TEST
00001060  4EB9 00001154             51          JSR     CHECK_INPUT_BOUNDS
00001066  B83C 0000                 52          CMP.B   #0,D4
0000106A  67A8                      53          BEQ     USR_IN_STRT
0000106C  2E03                      54          MOVE.L  D3,D7
0000106E  2A43                      55          MOVEA.L D3,A5
00001070                            56          
00001070                            57  USR_IN_END
00001070  43F9 00001298             58          LEA     USR_END_MSG,A1
00001076  103C 000E                 59          MOVE.B  #14,D0
0000107A  4E4F                      60          TRAP    #15
0000107C                            61          
0000107C  43F9 00001203             62          LEA     END_INPUT,A1
00001082                            63          
00001082  7002                      64          MOVEQ   #2,D0
00001084  4E4F                      65          TRAP    #15
00001086                            66          
00001086  4EB9 000010DA             67          JSR     CHECK_INPUT_LEN
0000108C                            68          
0000108C  B83C 0001                 69          CMP.B   #1,D4
00001090  6700 0010                 70          BEQ     PASS_LEN_TEST2
00001094                            71          ;else
00001094  43F9 000012B1             72          LEA     BAD_INPUT_MSG,A1
0000109A  103C 000E                 73          MOVE.B  #14,D0
0000109E  4E4F                      74          TRAP    #15
000010A0  60CE                      75          BRA     USR_IN_END
000010A2                            76          
000010A2                            77  PASS_LEN_TEST2
000010A2  4EB9 000010F6             78          JSR     ASCII_TO_HEX
000010A8  2C43                      79          MOVEA.L D3,A6
000010AA                            80          
000010AA  4EB9 00001128             81          JSR     CHECK_INPUT_ODD
000010B0  B83C 0001                 82          CMP.B   #1,D4
000010B4  6700 0004                 83          BEQ     PASS_ODD_TEST2
000010B8                            84          ;else
000010B8  60B6                      85          BRA     USR_IN_END
000010BA                            86          
000010BA                            87  PASS_ODD_TEST2
000010BA  4EB9 00001154             88          JSR     CHECK_INPUT_BOUNDS
000010C0  B83C 0000                 89          CMP.B   #0,D4
000010C4  67AA                      90          BEQ     USR_IN_END
000010C6                            91          ;else
000010C6  2C43                      92          MOVEA.L D3,A6
000010C8                            93          
000010C8  544E                      94          ADD     #2,A6
000010CA  43F9 00001326             95          LEA     WAIT_MSG,A1
000010D0  103C 000E                 96          MOVE.B  #14,D0
000010D4  4E4F                      97          TRAP    #15
000010D6  6000 00C2                 98          BRA     CONT_INPUT
000010DA                            99          
000010DA                           100  ********************************************************************************
000010DA                           101  CHECK_INPUT_LEN
000010DA  4284                     102          CLR.L   D4
000010DC  0C01 0000                103          CMPI.B  #$0,D1   ;if length of Hex is 0
000010E0  6700 0010                104          BEQ     BAD_INPUT
000010E4                           105          ;else        
000010E4  0C01 0008                106          CMPI.B  #$8,D1  ;if length of Hex is greater than 8
000010E8  6E00 0008                107          BGT     BAD_INPUT
000010EC                           108          ;else
000010EC  183C 0001                109          MOVE.B  #$1,D4
000010F0  4E75                     110          RTS
000010F2                           111  
000010F2                           112  ********************************************************************************
000010F2                           113  BAD_INPUT
000010F2  7800                     114          MOVEQ   #$0,D4
000010F4  4E75                     115          RTS
000010F6                           116          
000010F6                           117  ********************************************************************************        
000010F6                           118  ASCII_TO_HEX
000010F6  0C01 0000                119          CMPI.B  #$0,D1
000010FA  6700 002A                120          BEQ     ACII_TO_HEX_FINISHED
000010FE  1419                     121          MOVE.B  (A1)+,D2    ;move right one character
00001100  0C02 0039                122          CMPI.B  #$39,D2
00001104  6F00 000A                123          BLE     NUM         ;if the character is a number less than 9      
00001108                           124          ;else
00001108                           125  LETTER
00001108  0402 0037                126          SUBI.B  #$37,D2
0000110C  6000 000A                127          BRA     RESIZE
00001110                           128  
00001110                           129  ********************************************************************************                
00001110                           130  NUM
00001110  0402 0030                131          SUBI.B  #$30,D2
00001114  6000 0002                132          BRA     RESIZE
00001118                           133  
00001118                           134  ********************************************************************************
00001118                           135  RESIZE
00001118  5301                     136          SUBI.B  #$1,D1
0000111A  D602                     137          ADD.B   D2,D3
0000111C  0C01 0000                138          CMPI.B  #$0,D1
00001120  67D4                     139          BEQ     ASCII_TO_HEX
00001122                           140          ;else        
00001122  E99B                     141          ROL.L   #4,D3   ; rotate left 4 bits to the next char
00001124  60D0                     142          BRA     ASCII_TO_HEX
00001126                           143          
00001126                           144  *******************************************************************************
00001126                           145  ACII_TO_HEX_FINISHED
00001126  4E75                     146          RTS
00001128                           147  
00001128                           148  *******************************************************************************
00001128                           149  CHECK_INPUT_ODD
00001128  4284                     150          CLR.L   D4
0000112A  4282                     151          CLR.L   D2
0000112C  3403                     152          MOVE.W  D3,D2
0000112E  7202                     153          MOVE.L  #$00000002,D1
00001130  84C1                     154          DIVU    D1,D2
00001132  4842                     155          SWAP    D2
00001134  B43C 0001                156          CMP.B   #1,D2
00001138  6700 0008                157          BEQ     BAD_INPUT_ODD
0000113C                           158          ;else
0000113C  183C 0001                159          MOVE.B  #$1,D4
00001140  4E75                     160          RTS
00001142                           161          
00001142                           162  ******************************************************************************
00001142                           163  BAD_INPUT_ODD
00001142  43F9 000012C3            164          LEA     BAD_INPUT_ODD_MSG,A1
00001148  103C 000E                165          MOVE.B  #14,D0
0000114C  4E4F                     166          TRAP    #15
0000114E  7800                     167          MOVEQ   #$0,D4
00001150  4283                     168          CLR.L   D3
00001152  4E75                     169          RTS
00001154                           170  
00001154                           171  *****************************************************************************        
00001154                           172  CHECK_INPUT_BOUNDS
00001154  4284                     173          CLR.L   D4
00001156  223C 00007000            174          MOVE.L  #LOW_ADDR,D1
0000115C  B681                     175          CMP.L   D1,D3
0000115E  6D00 0012                176          BLT     BAD_INPUT_LOW
00001162                           177          ;else
00001162  223C 00FFFFFE            178          MOVE.L  #HIGH_ADDR,D1
00001168  B681                     179          CMP.L   D1,D3
0000116A  6E00 001A                180          BGT     BAD_INPUT_HIGH
0000116E                           181          ;else
0000116E  7801                     182          MOVEQ   #$1,D4
00001170  4E75                     183          RTS
00001172                           184          
00001172                           185  *****************************************************************************
00001172                           186  BAD_INPUT_LOW
00001172  43F9 000012EF            187          LEA     BAD_INPUT_LOW_MSG,A1
00001178  103C 000E                188          MOVE.B  #14,D0
0000117C  4E4F                     189          TRAP    #15
0000117E  183C 0000                190          MOVE.B  #$0,D4
00001182  4283                     191          CLR.L   D3
00001184  4E75                     192          RTS
00001186                           193          
00001186                           194  *****************************************************************************
00001186                           195  BAD_INPUT_HIGH
00001186  43F9 0000130A            196          LEA     BAD_INPUT_HIGH_MSG,A1
0000118C  103C 000E                197          MOVE.B  #14,D0
00001190  4E4F                     198          TRAP    #15
00001192  183C 0000                199          MOVE.B  #$0,D4
00001196  4283                     200          CLR.L   D3
00001198  4E75                     201          RTS
0000119A                           202          
0000119A                           203  *****************************************************************************
0000119A                           204  CONT_INPUT
0000119A  103C 000C                205          MOVE.B  #12,D0
0000119E  123C 0000                206          MOVE.B  #0,D1
000011A2  4E4F                     207          TRAP    #15
000011A4                           208          
000011A4  103C 0005                209          MOVE.B  #5,D0        
000011A8  4E4F                     210          TRAP    #15
000011AA                           211          
000011AA  6000 0002                212          BRA     MAIN_LOOP
000011AE                           213  
000011AE                           214  ****************************************************************************
000011AE                           215  MAIN_LOOP     
000011AE                           216          
000011AE                           217  
000011AE                           218  
000011AE                           219  
000011AE                           220  
000011AE                           221  
000011AE                           222  
000011AE                           223  
000011AE                           224  
000011AE                           225          
000011AE                           226  END                
000011AE  FFFF FFFF                227      SIMHALT             ; halt simulator
000011B2                           228                 
000011B2                           229  
000011B2                           230  * Put variables and constants here
000011B2                           231  CUR_LINE    DS.B    1
000011B3                           232  STRT_INPUT  DS.B    80
00001203                           233  END_INPUT   DS.B    80
00001253= 53 68 61 6E 65 6C ...    234  WELCOME_MSG DC.B    'Shanelee Tran and Tyler Do Disassembler',CR,LF,0
0000127D= 0D 0A 45 6E 74 65 ...    235  USR_STRT_MSG    DC.B    CR,LF,'Enter starting address: ',0
00001298= 0D 0A 45 6E 74 65 ...    236  USR_END_MSG    DC.B    CR,LF,'Enter ending address: ',0
000012B1= 0D 0A 49 6E 76 61 ...    237  BAD_INPUT_MSG   DC.B    CR,LF,'Invalid address',0
000012C3= 0D 0A 49 6E 76 61 ...    238  BAD_INPUT_ODD_MSG   DC.B    CR,LF,'Invalid address, no odd addresses allowed',0
000012EF= 0D 0A 49 6E 76 61 ...    239  BAD_INPUT_LOW_MSG   DC.B    CR,LF,'Invalid address, too low',0
0000130A= 0D 0A 49 6E 76 61 ...    240  BAD_INPUT_HIGH_MSG  DC.B    CR,LF,'Invalid address, too high',0
00001326= 0D 0A 50 72 65 73 ...    241  WAIT_MSG    DC.B    CR,LF,'Press any key to continue',0
00001342= 0D 0A 79 6F 75 20 ...    242  TEST_MSG    DC.B    CR,LF,'you made it',0
00001350                           243  
00001350  =00007000                244  LOW_ADDR    EQU     $00007000
00001350  =00FFFFFE                245  HIGH_ADDR   EQU     $00FFFFFE
00001350                           246      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ACII_TO_HEX_FINISHED  1126
ASCII_TO_HEX        10F6
BAD_INPUT           10F2
BAD_INPUT_HIGH      1186
BAD_INPUT_HIGH_MSG  130A
BAD_INPUT_LOW       1172
BAD_INPUT_LOW_MSG   12EF
BAD_INPUT_MSG       12B1
BAD_INPUT_ODD       1142
BAD_INPUT_ODD_MSG   12C3
CHECK_INPUT_BOUNDS  1154
CHECK_INPUT_LEN     10DA
CHECK_INPUT_ODD     1128
CONT_INPUT          119A
CR                  D
CUR_LINE            11B2
END                 11AE
END_INPUT           1203
HIGH_ADDR           FFFFFE
LETTER              1108
LF                  A
LOW_ADDR            7000
MAIN_LOOP           11AE
NUM                 1110
PASS_LEN_TEST       1048
PASS_LEN_TEST2      10A2
PASS_ODD_TEST       1060
PASS_ODD_TEST2      10BA
RESIZE              1118
START               1000
STRT_INPUT          11B3
TEST_MSG            1342
USR_END_MSG         1298
USR_IN_END          1070
USR_IN_STRT         1014
USR_STRT_MSG        127D
WAIT_MSG            1326
WELCOME_MSG         1253
