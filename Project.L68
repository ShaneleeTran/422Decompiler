00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 5/23/2017 2:07:43 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU $0D
00000000  =0000000A                  8  LF      EQU $0A       
00000000                             9  
00001000                            10      ORG    $1000
00001000                            11      
00001000                            12  START:                  ; first instruction of program
00001000                            13  
00001000                            14  * Put program code here
00001000  43F9 0000136B             15          LEA     WELCOME_MSG,A1  ; welcome message
00001006  103C 000E                 16          MOVE.B  #14,D0
0000100A  4E4F                      17          TRAP    #15
0000100C  13FC 0000 000012CA        18          MOVE.B  #0,CUR_LINE
00001014                            19          
00001014                            20  USR_IN_STRT
00001014  43F9 00001395             21          LEA     USR_STRT_MSG,A1  ; user start address message
0000101A  103C 000E                 22          MOVE.B  #14,D0
0000101E  4E4F                      23          TRAP    #15
00001020                            24          
00001020  43F9 000012CB             25          LEA     STRT_INPUT,A1
00001026                            26      
00001026  103C 0002                 27          MOVE.B  #2,D0           ;read user input as string
0000102A  4E4F                      28          TRAP    #15
0000102C                            29                
0000102C  4EB9 000010DC             30          JSR     CHECK_INPUT_LEN   ;checks the length of user input
00001032                            31          
00001032  B83C 0001                 32          CMP.B   #1,D4
00001036  6700 0010                 33          BEQ     PASS_LEN_TEST        
0000103A                            34          ;else      
0000103A  43F9 000013C9             35          LEA     BAD_INPUT_MSG,A1
00001040  103C 000E                 36          MOVE.B  #14,D0
00001044  4E4F                      37          TRAP    #15
00001046  60CC                      38          BRA     USR_IN_STRT
00001048                            39          
00001048                            40  PASS_LEN_TEST        
00001048  4EB9 000010F8             41          JSR     ASCII_TO_HEX
0000104E  2A43                      42          MOVEA.L D3,A5
00001050                            43          
00001050  4EB9 0000112A             44          JSR     CHECK_INPUT_ODD
00001056  B83C 0001                 45          CMP.B   #1,D4
0000105A  6700 0004                 46          BEQ     PASS_ODD_TEST
0000105E                            47          ;else
0000105E  60B4                      48          BRA     USR_IN_STRT
00001060                            49          
00001060                            50  PASS_ODD_TEST
00001060  4EB9 00001156             51          JSR     CHECK_INPUT_BOUNDS
00001066  B83C 0000                 52          CMP.B   #0,D4
0000106A  67A8                      53          BEQ     USR_IN_STRT
0000106C  2E03                      54          MOVE.L  D3,D7
0000106E  2A43                      55          MOVEA.L D3,A5
00001070                            56          
00001070                            57  USR_IN_END
00001070  43F9 000013B0             58          LEA     USR_END_MSG,A1
00001076  103C 000E                 59          MOVE.B  #14,D0
0000107A  4E4F                      60          TRAP    #15
0000107C                            61          
0000107C  43F9 0000131B             62          LEA     END_INPUT,A1
00001082                            63          
00001082  7002                      64          MOVEQ   #2,D0
00001084  4E4F                      65          TRAP    #15
00001086  4283                      66          CLR.L   D3
00001088                            67          
00001088  4EB9 000010DC             68          JSR     CHECK_INPUT_LEN
0000108E                            69          
0000108E  B83C 0001                 70          CMP.B   #1,D4
00001092  6700 0010                 71          BEQ     PASS_LEN_TEST2
00001096                            72          ;else
00001096  43F9 000013C9             73          LEA     BAD_INPUT_MSG,A1
0000109C  103C 000E                 74          MOVE.B  #14,D0
000010A0  4E4F                      75          TRAP    #15
000010A2  60CC                      76          BRA     USR_IN_END
000010A4                            77          
000010A4                            78  PASS_LEN_TEST2
000010A4  4EB9 000010F8             79          JSR     ASCII_TO_HEX
000010AA  2C43                      80          MOVEA.L D3,A6
000010AC                            81          
000010AC  4EB9 0000112A             82          JSR     CHECK_INPUT_ODD
000010B2  B83C 0001                 83          CMP.B   #1,D4
000010B6  6700 0004                 84          BEQ     PASS_ODD_TEST2
000010BA                            85          ;else
000010BA                            86          
000010BA  60B4                      87          BRA     USR_IN_END
000010BC                            88          
000010BC                            89  PASS_ODD_TEST2
000010BC  4EB9 00001156             90          JSR     CHECK_INPUT_BOUNDS
000010C2  B83C 0000                 91          CMP.B   #0,D4
000010C6  67A8                      92          BEQ     USR_IN_END
000010C8                            93          ;else
000010C8  2C43                      94          MOVEA.L D3,A6
000010CA                            95          
000010CA  544E                      96          ADD     #2,A6
000010CC  43F9 0000143E             97          LEA     WAIT_MSG,A1
000010D2  103C 000E                 98          MOVE.B  #14,D0
000010D6  4E4F                      99          TRAP    #15
000010D8  6000 00C2                100          BRA     CONT_INPUT
000010DC                           101          
000010DC                           102  ********************************************************************************
000010DC                           103  CHECK_INPUT_LEN
000010DC  4284                     104          CLR.L   D4
000010DE  0C01 0000                105          CMPI.B  #$0,D1   ;if length of Hex is 0
000010E2  6700 0010                106          BEQ     BAD_INPUT
000010E6                           107          ;else        
000010E6  0C01 0008                108          CMPI.B  #$8,D1  ;if length of Hex is greater than 8
000010EA  6E00 0008                109          BGT     BAD_INPUT
000010EE                           110          ;else
000010EE  183C 0001                111          MOVE.B  #$1,D4
000010F2  4E75                     112          RTS
000010F4                           113  
000010F4                           114  ********************************************************************************
000010F4                           115  BAD_INPUT
000010F4  7800                     116          MOVEQ   #$0,D4
000010F6  4E75                     117          RTS
000010F8                           118          
000010F8                           119  ********************************************************************************        
000010F8                           120  ASCII_TO_HEX
000010F8  0C01 0000                121          CMPI.B  #$0,D1
000010FC  6700 002A                122          BEQ     ACII_TO_HEX_FINISHED
00001100  1419                     123          MOVE.B  (A1)+,D2    ;move right one character
00001102  0C02 0039                124          CMPI.B  #$39,D2
00001106  6F00 000A                125          BLE     NUM         ;if the character is a number less than 9      
0000110A                           126          ;else
0000110A                           127  LETTER
0000110A  0402 0037                128          SUBI.B  #$37,D2
0000110E  6000 000A                129          BRA     RESIZE
00001112                           130  
00001112                           131  ********************************************************************************                
00001112                           132  NUM
00001112  0402 0030                133          SUBI.B  #$30,D2
00001116  6000 0002                134          BRA     RESIZE
0000111A                           135  
0000111A                           136  ********************************************************************************
0000111A                           137  RESIZE
0000111A  5301                     138          SUBI.B  #$1,D1
0000111C  D602                     139          ADD.B   D2,D3
0000111E  0C01 0000                140          CMPI.B  #$0,D1
00001122  67D4                     141          BEQ     ASCII_TO_HEX
00001124                           142          ;else        
00001124  E99B                     143          ROL.L   #4,D3   ; rotate left 4 bits to the next char
00001126  60D0                     144          BRA     ASCII_TO_HEX
00001128                           145          
00001128                           146  *******************************************************************************
00001128                           147  ACII_TO_HEX_FINISHED
00001128  4E75                     148          RTS
0000112A                           149  
0000112A                           150  *******************************************************************************
0000112A                           151  CHECK_INPUT_ODD
0000112A  4284                     152          CLR.L   D4
0000112C  4282                     153          CLR.L   D2
0000112E  3403                     154          MOVE.W  D3,D2
00001130  7202                     155          MOVE.L  #$00000002,D1
00001132  84C1                     156          DIVU    D1,D2
00001134  4842                     157          SWAP    D2
00001136  B43C 0001                158          CMP.B   #1,D2
0000113A  6700 0008                159          BEQ     BAD_INPUT_ODD
0000113E                           160          ;else
0000113E  183C 0001                161          MOVE.B  #$1,D4
00001142  4E75                     162          RTS
00001144                           163          
00001144                           164  ******************************************************************************
00001144                           165  BAD_INPUT_ODD
00001144  43F9 000013DB            166          LEA     BAD_INPUT_ODD_MSG,A1
0000114A  103C 000E                167          MOVE.B  #14,D0
0000114E  4E4F                     168          TRAP    #15
00001150  7800                     169          MOVEQ   #$0,D4
00001152  4283                     170          CLR.L   D3
00001154  4E75                     171          RTS
00001156                           172  
00001156                           173  *****************************************************************************        
00001156                           174  CHECK_INPUT_BOUNDS
00001156  4284                     175          CLR.L   D4
00001158  223C 00007000            176          MOVE.L  #LOW_ADDR,D1
0000115E  B681                     177          CMP.L   D1,D3
00001160  6D00 0012                178          BLT     BAD_INPUT_LOW
00001164                           179          ;else
00001164  223C 00FFFFFE            180          MOVE.L  #HIGH_ADDR,D1
0000116A  B681                     181          CMP.L   D1,D3
0000116C  6E00 001A                182          BGT     BAD_INPUT_HIGH
00001170                           183          ;else
00001170  7801                     184          MOVEQ   #$1,D4
00001172  4E75                     185          RTS
00001174                           186          
00001174                           187  *****************************************************************************
00001174                           188  BAD_INPUT_LOW
00001174  43F9 00001407            189          LEA     BAD_INPUT_LOW_MSG,A1
0000117A  103C 000E                190          MOVE.B  #14,D0
0000117E  4E4F                     191          TRAP    #15
00001180  183C 0000                192          MOVE.B  #$0,D4
00001184  4283                     193          CLR.L   D3
00001186  4E75                     194          RTS
00001188                           195          
00001188                           196  *****************************************************************************
00001188                           197  BAD_INPUT_HIGH
00001188  43F9 00001422            198          LEA     BAD_INPUT_HIGH_MSG,A1
0000118E  103C 000E                199          MOVE.B  #14,D0
00001192  4E4F                     200          TRAP    #15
00001194  183C 0000                201          MOVE.B  #$0,D4
00001198  4283                     202          CLR.L   D3
0000119A  4E75                     203          RTS
0000119C                           204          
0000119C                           205  *****************************************************************************
0000119C                           206  CONT_INPUT
0000119C  103C 000C                207          MOVE.B  #12,D0
000011A0  123C 0000                208          MOVE.B  #0,D1
000011A4  4E4F                     209          TRAP    #15
000011A6                           210          
000011A6  103C 0005                211          MOVE.B  #5,D0        
000011AA  4E4F                     212          TRAP    #15
000011AC                           213          
000011AC  6000 0002                214          BRA     MAIN_LOOP
000011B0                           215  
000011B0                           216  ****************************************************************************
000011B0                           217  MAIN_LOOP     
000011B0  3C1D                     218          MOVE.W   (A5)+, D6
000011B2  47F9 0000146C            219          LEA     GOODDATA, A3
000011B8  49F9 00001468            220          LEA     BADDATA, A4
000011BE  4EB9 0000122A            221          JSR     ADDRPRNT
000011C4  4EB9 00001202            222          JSR     BAD
000011CA  4EB9 00001284            223          JSR     DSMBLE
000011D0  BE38 00FF                224          CMP.B   $FF,D7
000011D4  6700 009A                225          BEQ     BAD_PRINT
000011D8  16FC 0000                226          MOVE.B  #$00, (A3)+
000011DC  43F9 0000146C            227          LEA     GOODDATA, A1
000011E2  700D                     228          MOVEQ   #13,D0
000011E4  4E4F                     229          TRAP    #15
000011E6                           230  END_LOOP
000011E6  BCCD                     231          CMP.W   A5,A6
000011E8  6700 00DC                232          BEQ     END
000011EC  BACE                     233          CMP.W   A6,A5
000011EE  6E00 00D6                234          BGT     END
000011F2  5239 000012CA            235          ADD.B   #1, CUR_LINE
000011F8  0C39 001D 000012CA       236          CMP.B   #29, CUR_LINE
00001200  60AE                     237          BRA     MAIN_LOOP
00001202                           238  ****************************************************************************
00001202                           239  
00001202                           240  BAD
00001202  18FC 0042                241          MOVE.B  #'B',(A4)+          Insert B into the output
00001206  18FC 0041                242          MOVE.B  #'A',(A4)+          Insert A into the output
0000120A  18FC 0044                243          MOVE.B  #'D',(A4)+          Insert D into the output
0000120E  18FC 0020                244          MOVE.B  #' ',(A4)+          Insert a space into the output
00001212  18FC 0044                245          MOVE.B  #'D',(A4)+          Insert D into output
00001216  18FC 0041                246          MOVE.B  #'A',(A4)+          Insert A into output
0000121A  18FC 0054                247          MOVE.B  #'T',(A4)+          Insert T into output
0000121E  18FC 0041                248          MOVE.B  #'A',(A4)+          Insert A into output
00001222  18FC 0020                249          MOVE.B  #' ',(A4)+          Insert a space into output
00001226  18FC 0024                250          MOVE.B #'$',(A4)+           Insert a $ into output
0000122A                           251          
0000122A                           252  ADDRPRNT
0000122A  7008                     253          MOVEQ   #8, D0
0000122C  280D                     254          MOVE.L  A5, D4
0000122E  5504                     255          SUB.B   #2, D4
00001230                           256  
00001230                           257  GET_MSB
00001230  E99C                     258          ROL.L   #4,D4
00001232  2A04                     259          MOVE.L  D4,D5
00001234  0285 0000000F            260          ANDI.L  #$0000000F, D5
0000123A                           261          
0000123A                           262  ASCII_CHECK
0000123A  0C05 0009                263          CMPI.B #$09,D5
0000123E  6F00 000A                264          BLE     CHAR_TO_NUM
00001242                           265          ;else
00001242                           266  CHAR_TO_ALPHABET        
00001242  0605 0037                267          ADDI.B  #$37,D5
00001246  6000 000A                268          BRA     MOVE_TO_GOOD_DATA
0000124A                           269          
0000124A                           270  CHAR_TO_NUM
0000124A  0605 0030                271          ADDI.B  #$30,D5
0000124E  6000 0002                272          BRA     MOVE_TO_GOOD_DATA
00001252                           273          
00001252                           274  MOVE_TO_GOOD_DATA
00001252  5300                     275          SUBI.B  #1,D0
00001254  16C5                     276          MOVE.B  D5,(A3)+
00001256  18C5                     277          MOVE.B  D5,(A4)+
00001258  0C00 0000                278          CMPI.B  #0,D0
0000125C  6ED2                     279          BGT     GET_MSB
0000125E  16FC 0020                280          MOVE.B  #$20,(A3)+
00001262  16FC 0020                281          MOVE.B  #$20,(A3)+
00001266  18FC 0020                282          MOVE.B  #$20,(A4)+
0000126A  18FC 0020                283          MOVE.B  #$20,(A4)+
0000126E  4E75                     284          RTS
00001270                           285          
00001270                           286  ***************************************************************************
00001270                           287  BAD_PRINT
00001270  18FC 0000                288          MOVE.B  #$00,(A4)+
00001274  43F9 00001468            289          LEA     BADDATA,A1
0000127A  700D                     290          MOVEQ   #13,D0
0000127C  4E4F                     291          TRAP    #15
0000127E  4287                     292          CLR.L   D7
00001280  6000 FF64                293          BRA     END_LOOP
00001284                           294  
00001284                           295  ***************************************************************************
00001284                           296  DSMBLE  
00001284  4201                     297          CLR.B   D1
00001286  3A06                     298          MOVE.W  D6,D5
00001288  E04D                     299          LSR.W   #8, D5
0000128A  E84D                     300          LSR.W   #4, D5
0000128C  CAFC 0008                301          MULU    #8, D5
00001290  41F9 0000129C            302          LEA     FIRSTJMP, A0
00001296  4EB0 5000                303          JSR     (A0,D5) *0(A0,D5)?
0000129A  4E75                     304          RTS
0000129C                           305  
0000129C                           306  ****************************************************************************
0000129C                           307  FIRSTJMP
0000129C  4EB9 000012A4            308          JSR     FIRST0001
000012A2  4E75                     309          RTS
000012A4                           310          
000012A4                           311  FIRST0001
000012A4  16FC 004D                312          MOVE.B  #'M',(A3)+                  Insert M into the output
000012A8  16FC 004F                313          MOVE.B  #'O',(A3)+                  Insert O into the output
000012AC  16FC 0056                314          MOVE.B  #'V',(A3)+                  Insert V into the output
000012B0  16FC 0045                315          MOVE.B  #'E',(A3)+                  Insert E into the output
000012B4  16FC 002E                316          MOVE.B  #'.',(A3)+                  Insert . into the output
000012B8  16FC 0042                317          MOVE.B  #'B',(A3)+                  Insert B into the output
000012BC  16FC 0020                318          MOVE.B  #' ',(A3)+                  Insert a space into the output
000012C0  16FC 0020                319          MOVE.B  #' ',(A3)+                  Insert a space into the output
000012C4                           320      
000012C4  4E75                     321          RTS                                 Return the instruction
000012C6                           322  
000012C6                           323          
000012C6                           324  END                
000012C6  FFFF FFFF                325      SIMHALT             ; halt simulator
000012CA                           326                 
000012CA                           327  
000012CA                           328  * Put variables and constants here
000012CA                           329  CUR_LINE    DS.B    1
000012CB                           330  STRT_INPUT  DS.B    80
0000131B                           331  END_INPUT   DS.B    80
0000136B= 53 68 61 6E 65 6C ...    332  WELCOME_MSG DC.B    'Shanelee Tran and Tyler Do Disassembler',CR,LF,0
00001395= 0D 0A 45 6E 74 65 ...    333  USR_STRT_MSG    DC.B    CR,LF,'Enter starting address: ',0
000013B0= 0D 0A 45 6E 74 65 ...    334  USR_END_MSG    DC.B    CR,LF,'Enter ending address: ',0
000013C9= 0D 0A 49 6E 76 61 ...    335  BAD_INPUT_MSG   DC.B    CR,LF,'Invalid address',0
000013DB= 0D 0A 49 6E 76 61 ...    336  BAD_INPUT_ODD_MSG   DC.B    CR,LF,'Invalid address, no odd addresses allowed',0
00001407= 0D 0A 49 6E 76 61 ...    337  BAD_INPUT_LOW_MSG   DC.B    CR,LF,'Invalid address, too low',0
00001422= 0D 0A 49 6E 76 61 ...    338  BAD_INPUT_HIGH_MSG  DC.B    CR,LF,'Invalid address, too high',0
0000143E= 0D 0A 50 72 65 73 ...    339  WAIT_MSG    DC.B    CR,LF,'Press any key to continue',0
0000145A= 0D 0A 79 6F 75 20 ...    340  TEST_MSG    DC.B    CR,LF,'you made it',0
00001468= 00000001                 341  BADDATA DC.L 1
0000146C= 00000001                 342  GOODDATA DC.L 1
00001470                           343  
00001470  =00007000                344  LOW_ADDR    EQU     $00007000
00001470  =00FFFFFE                345  HIGH_ADDR   EQU     $00FFFFFE
00001470                           346      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ACII_TO_HEX_FINISHED  1128
ADDRPRNT            122A
ASCII_CHECK         123A
ASCII_TO_HEX        10F8
BAD                 1202
BADDATA             1468
BAD_INPUT           10F4
BAD_INPUT_HIGH      1188
BAD_INPUT_HIGH_MSG  1422
BAD_INPUT_LOW       1174
BAD_INPUT_LOW_MSG   1407
BAD_INPUT_MSG       13C9
BAD_INPUT_ODD       1144
BAD_INPUT_ODD_MSG   13DB
BAD_PRINT           1270
CHAR_TO_ALPHABET    1242
CHAR_TO_NUM         124A
CHECK_INPUT_BOUNDS  1156
CHECK_INPUT_LEN     10DC
CHECK_INPUT_ODD     112A
CONT_INPUT          119C
CR                  D
CUR_LINE            12CA
DSMBLE              1284
END                 12C6
END_INPUT           131B
END_LOOP            11E6
FIRST0001           12A4
FIRSTJMP            129C
GET_MSB             1230
GOODDATA            146C
HIGH_ADDR           FFFFFE
LETTER              110A
LF                  A
LOW_ADDR            7000
MAIN_LOOP           11B0
MOVE_TO_GOOD_DATA   1252
NUM                 1112
PASS_LEN_TEST       1048
PASS_LEN_TEST2      10A4
PASS_ODD_TEST       1060
PASS_ODD_TEST2      10BC
RESIZE              111A
START               1000
STRT_INPUT          12CB
TEST_MSG            145A
USR_END_MSG         13B0
USR_IN_END          1070
USR_IN_STRT         1014
USR_STRT_MSG        1395
WAIT_MSG            143E
WELCOME_MSG         136B
